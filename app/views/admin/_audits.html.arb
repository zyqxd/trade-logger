# frozen_string_literal: true
audits =
  resource
  .own_and_associated_audits
  .includes(:user)
  .reorder(created_at: :desc)
  .first(10)

if audits.blank?
  div class: 'panel' do
    h3 'Audit History'
    div class: 'panel_contents' do
      'No history recorded'
    end
  end
else
  panel 'Audit History' do
    table_for audits do
      column 'Modified at' do |a|
        a.created_at.to_s :long
      end
      column 'Modified by' do |a|
        if a.user.present?
          # NOTE(DZ): Audited gem allows string as user
          if a.user.is_a?(User)
            link_to "(#{ a.user_id }) #{ a.user.name }", admin_user_path(a.user)
          else
            a.user
          end
        else
          'None'
        end
      end
      column 'Association' do |a|
        if a.associated_type.blank?
          'N/A'
        else
          "#{ a.auditable_type } #{ a.auditable_id }"
        end
      end
      column 'Changes' do |a|
        if a.action != 'update'
          a.action
        else
          simple_format(
            a.audited_changes.map do |key, value|
              "<strong>#{ key }</strong>: "\
              "#{ value.first } => #{ value.last.nil? ? 'nil' : value.last }"
            end.join("\n"),
          )
        end
      end
      column 'Reason' do |a|
        a.comment.presence || 'None'
      end
    end
  end
end
